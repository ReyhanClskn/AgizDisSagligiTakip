// <auto-generated />
using System;
using AgizDisSagligiTakip.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgizDisSagligiTakip.Data.Migrations
{
    [DbContext(typeof(UygulamaDbContext))]
    [Migration("20250710130356_KullanicilariTemizle")]
    partial class KullanicilariTemizle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Hedef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("OnemDerecesi")
                        .HasColumnType("int");

                    b.Property<int>("Periyot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Hedefler");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.HedefKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HedefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Saat")
                        .HasColumnType("time");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Uygulandi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HedefId");

                    b.ToTable("HedefKayitlari");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Not", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GorselYolu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Notlar");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Oneri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Oneriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aktif = true,
                            Metin = "Günde en az 2 kez diş fırçalamayı unutmayın!",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Aktif = true,
                            Metin = "Diş ipi kullanmak, diş fırçasının ulaşamadığı yerleri temizler.",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Aktif = true,
                            Metin = "Şekerli içecekleri sınırlandırın, dişleriniz size teşekkür edecek.",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Aktif = true,
                            Metin = "6 ayda bir diş hekimi kontrolü yaptırmayı ihmal etmeyin.",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Aktif = true,
                            Metin = "Ağız gargarası kullanarak ağız hijyeninizi destekleyin.",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Aktif = true,
                            Metin = "Diş fırçanızı 3 ayda bir değiştirin.",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Aktif = true,
                            Metin = "Sert fırçalama yerine nazik dairesel hareketler yapın.",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Aktif = true,
                            Metin = "Yemek sonrası 30 dakika bekleyip diş fırçalayın.",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Hedef", b =>
                {
                    b.HasOne("AgizDisSagligiTakip.Core.Entities.Kullanici", "Kullanici")
                        .WithMany("Hedefler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.HedefKaydi", b =>
                {
                    b.HasOne("AgizDisSagligiTakip.Core.Entities.Hedef", "Hedef")
                        .WithMany("HedefKayitlari")
                        .HasForeignKey("HedefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hedef");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Not", b =>
                {
                    b.HasOne("AgizDisSagligiTakip.Core.Entities.Kullanici", "Kullanici")
                        .WithMany("Notlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Hedef", b =>
                {
                    b.Navigation("HedefKayitlari");
                });

            modelBuilder.Entity("AgizDisSagligiTakip.Core.Entities.Kullanici", b =>
                {
                    b.Navigation("Hedefler");

                    b.Navigation("Notlar");
                });
#pragma warning restore 612, 618
        }
    }
}
