@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options

@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures?
        .Select(c => new SelectListItem { 
            Value = c.Name, 
            Text = c.Name == "tr" ? "Türkçe" : "English" 
        })
        .ToList() ?? new List<SelectListItem>();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
    var currentCulture = requestCulture?.RequestCulture.UICulture.Name ?? "tr";
}

<div class="language-selector">
    <form id="selectLanguage" method="post" action="@Url.Action("SetLanguage", "Home", new { returnUrl = returnUrl })" class="form-inline">
        <select name="culture" class="form-control form-control-sm" onchange="this.form.submit();">
            @foreach (var item in cultureItems)
            {
                <option value="@item.Value" selected="@(item.Value == currentCulture)">@item.Text</option>
            }
        </select>
    </form>
</div>

<style>
    .language-selector {
        display: inline-block;
        margin-left: 10px;
    }
    .language-selector select {
        background-color: rgba(255,255,255,0.2);
        border: 1px solid rgba(255,255,255,0.5);
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 14px;
    }
    .language-selector select option {
        background-color: #333;
        color: white;
    }
</style>