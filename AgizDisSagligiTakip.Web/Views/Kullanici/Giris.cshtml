@model AgizDisSagligiTakip.Core.ViewModels.KullaniciGirisViewModel

@{
    ViewData["Title"] = "Kullanıcı Girişi";
}

<style>
    .login-container {
        min-height: 70vh;
        display: flex;
        align-items: center;
        padding: 20px 0;
    }

    .login-card {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 30px;
        box-shadow: 0 20px 60px rgba(0, 217, 255, 0.1);
        overflow: hidden;
        transform: perspective(1000px) rotateX(0deg);
        transition: all 0.3s ease;
    }

    .login-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 25px 70px rgba(0, 217, 255, 0.15);
    }

    .login-header {
        background: linear-gradient(135deg, rgba(0, 217, 255, 0.2) 0%, rgba(124, 58, 237, 0.2) 100%);
        color: white;
        padding: 30px;
        text-align: center;
        border: none;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .login-header h3 {
        margin: 0;
        font-weight: 700;
        font-size: 2rem;
        background: linear-gradient(135deg, #00D9FF 0%, #7C3AED 100%);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .login-body {
        padding: 40px;
        position: relative;
    }

    /* Decorative elements */
    .login-body::before {
        content: '\f5a0'; /* Font Awesome tooth icon */
        font-family: 'Font Awesome 5 Free';
        font-weight: 900;
        position: absolute;
        top: 20px;
        right: 20px;
        font-size: 100px;
        color: rgba(0, 217, 255, 0.05);
        transform: rotate(-15deg);
    }

    .form-control {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        padding: 12px 16px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        color: var(--light);
    }

    .form-control:focus {
        background: rgba(255, 255, 255, 0.08);
        border-color: var(--primary);
        box-shadow: 0 0 0 0.25rem rgba(0, 217, 255, 0.25);
        color: var(--light);
    }

    .form-control::placeholder {
        color: rgba(255, 255, 255, 0.5);
    }

    .btn-login {
        background: linear-gradient(135deg, #00D9FF 0%, #7C3AED 100%);
        border: none;
        border-radius: 50px;
        padding: 14px 30px;
        color: white;
        font-weight: 600;
        font-size: 1.1rem;
        box-shadow: 0 4px 15px rgba(0, 217, 255, 0.3);
        transition: all 0.3s ease;
        width: 100%;
        text-transform: uppercase;
        letter-spacing: 1px;
        position: relative;
        overflow: hidden;
    }

    .btn-login::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #7C3AED 0%, #00D9FF 100%);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .btn-login:hover::before {
        opacity: 1;
    }

    .btn-login:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 217, 255, 0.4);
        color: white;
    }

    .form-label {
        font-weight: 500;
        color: var(--light);
        margin-bottom: 8px;
        font-size: 0.95rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .btn-link {
        color: var(--primary);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-link:hover {
        color: var(--primary-dark);
        text-decoration: underline;
    }

    .alert {
        border-radius: 15px;
        border: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        backdrop-filter: blur(10px);
    }

    .alert-success {
        background: rgba(16, 185, 129, 0.1);
        border: 1px solid rgba(16, 185, 129, 0.3);
        color: #10B981;
    }

    .alert-danger {
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid rgba(239, 68, 68, 0.3);
        color: #EF4444;
    }

    /* Additional decorative element */
    .divider-text {
        text-align: center;
        margin: 20px 0;
        position: relative;
        color: rgba(255, 255, 255, 0.5);
        font-size: 0.9rem;
    }

    .divider-text::before,
    .divider-text::after {
        content: '';
        position: absolute;
        top: 50%;
        width: 40%;
        height: 1px;
        background: rgba(255, 255, 255, 0.1);
    }

    .divider-text::before {
        left: 0;
    }

    .divider-text::after {
        right: 0;
    }
</style>

<div class="login-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card login-card">
                    <div class="card-header login-header">
                        <h3><i class="fas fa-user-circle me-2"></i>Kullanıcı Girişi</h3>
                    </div>
                    <div class="card-body login-body">
                        @if (TempData["BasariMesaji"] != null)
                        {
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle me-2"></i>
                                @TempData["BasariMesaji"]
                            </div>
                        }

                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <div>@error.ErrorMessage</div>
                                }
                            </div>
                        }

                        <form method="post" action="/Kullanici/Giris">
                            @Html.AntiForgeryToken()

                            <div class="mb-4">
                                <label for="Email" class="form-label">
                                    <i class="fas fa-envelope me-2"></i>E-posta
                                </label>
                                <input id="Email" name="Email" class="form-control" type="email" 
                                    placeholder="ornek@email.com" required />
                            </div>

                            <div class="mb-4">
                                <label for="Sifre" class="form-label">
                                    <i class="fas fa-lock me-2"></i>Şifre
                                </label>
                                <input id="Sifre" name="Sifre" class="form-control" type="password" 
                                    placeholder="Şifrenizi girin" required />
                            </div>

                            <div class="d-grid mb-4">
                                <button type="submit" class="btn btn-login">
                                    <i class="fas fa-sign-in-alt me-2"></i>Giriş Yap
                                </button>
                            </div>

                            <div class="divider-text">veya</div>

                            <div class="text-center">
                                <a href="/Kullanici/Kayit" class="btn btn-link">
                                    <i class="fas fa-user-plus me-1"></i>Hesabınız yok mu? Kayıt olun
                                </a>
                                <br>
                                <a href="/Kullanici/ParolaHatirlat" class="btn btn-link">
                                    <i class="fas fa-key me-1"></i>Şifremi Unuttum
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>